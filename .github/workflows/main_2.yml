
name: Deploy Docker Image to EC2

on: 
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1. Checkout Repository
    - name: Checkout repository
      uses: actions/checkout@v4

      # Step 2. Login to Dockerhub
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets. DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWD }}

      # Step 3. Build and push Docker image
    - name: Build and push Docker image
      working-directory: ./app
      run: |
        docker build -t app-image .
        docker tag app-image crisxyrus/app-image:latest
        docker push crisxyrus/app-image:latest

      # step 4. Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0
      
      # Step 6: Initialize Terraform
    - name: Terraform Init
      run: terraform init
      working-directory: ${{ secrets.TERRAFORM_DIR }}

    # Step 7: Apply Terraform
    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ${{ secrets.TERRAFORM_DIR }}

    # Step 8: Extract EC2 Public IP from Terraform Output
    - name: Get EC2 Public IP
      id: ec2-ip
      run: |
        cd ${{ secrets.TERRAFORM_DIR }}
        terraform output -raw public_ip > ec2_public_ip.txt
        echo "EC2_PUBLIC_IP=$(cat ec2_public_ip.txt)" >> $GITHUB_ENV



      # step 4. Deploy Docker image to ec2
   # - name: Deploy Docker image to EC2
     # run: |
     #   ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_INSTANCE_IP }} << 'EOF'
     #   docker pull crisxyrus/app-image:latest
     #   docker stop $(docker ps -a -q) || true
     #   docker run -d -p 80:80 ycrisxyrus/app-image:latest
     #   EOF